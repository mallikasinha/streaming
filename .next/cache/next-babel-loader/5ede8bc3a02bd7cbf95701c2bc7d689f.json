{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useState, useRef } from 'react';\nimport Head from 'next/head';\nvar CAMERA_CONSTRAINTS = {\n  audio: true,\n  video: {\n    width: 960,\n    height: 540\n  }\n};\nexport default _s(function () {\n  _s();\n\n  var _useState = useState(false),\n      connected = _useState[0],\n      setConnected = _useState[1];\n\n  var _useState2 = useState(false),\n      cameraEnabled = _useState2[0],\n      setCameraEnabled = _useState2[1];\n\n  var _useState3 = useState(false),\n      streaming = _useState3[0],\n      setStreaming = _useState3[1];\n\n  var _useState4 = useState(null),\n      streamKey = _useState4[0],\n      setStreamKey = _useState4[1];\n\n  var _useState5 = useState('you'),\n      shoutOut = _useState5[0],\n      setShoutOut = _useState5[1];\n\n  var inputStreamRef = useRef();\n  var videoRef = useRef();\n  var canvasRef = useRef();\n  var wsRef = useRef();\n  var mediaRecorderRef = useRef();\n  var requestAnimationRef = useRef();\n  var nameRef = useRef();\n\n  var enableCamera = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return navigator.mediaDevices.getUserMedia(CAMERA_CONSTRAINTS);\n\n            case 2:\n              inputStreamRef.current = _context.sent;\n              videoRef.current.srcObject = inputStreamRef.current;\n              _context.next = 6;\n              return videoRef.current.play();\n\n            case 6:\n              // We need to set the canvas height/width to match the video element.\n              canvasRef.current.height = videoRef.current.clientHeight;\n              canvasRef.current.width = videoRef.current.clientWidth;\n              requestAnimationRef.current = requestAnimationFrame(updateCanvas);\n              setCameraEnabled(true);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function enableCamera() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var updateCanvas = function updateCanvas() {\n    if (videoRef.current.ended || videoRef.current.paused) {\n      return;\n    }\n\n    var ctx = canvasRef.current.getContext('2d');\n    ctx.drawImage(videoRef.current, 0, 0, videoRef.current.clientWidth, videoRef.current.clientHeight);\n    ctx.fillStyle = '#ff0000';\n    ctx.font = '50px monospace'; // ctx.fillText(`Oh hi, ${nameRef.current}`, 5, 50);\n\n    requestAnimationRef.current = requestAnimationFrame(updateCanvas);\n  };\n\n  var stopStreaming = function stopStreaming() {\n    mediaRecorderRef.current.stop();\n    setStreaming(false);\n  };\n\n  var startStreaming = function startStreaming() {\n    setStreaming(true);\n    var protocol = window.location.protocol.replace('http', 'ws');\n    wsRef.current = new WebSocket(\"\".concat(protocol, \"//\").concat(window.location.host, \"/rtmp?key=\").concat(streamKey));\n    console.log(wsRef.current.url);\n    wsRef.current.addEventListener('open', function open() {\n      setConnected(true);\n    });\n    wsRef.current.addEventListener('close', function () {\n      setConnected(false);\n      stopStreaming();\n    });\n    var videoOutputStream = canvasRef.current.captureStream(15); // 15 FPS\n    // Let's do some extra work to get audio to join the party.\n    // https://hacks.mozilla.org/2016/04/record-almost-everything-in-the-browser-with-mediarecorder/\n\n    var audioStream = new MediaStream();\n    var audioTracks = inputStreamRef.current.getAudioTracks();\n    audioTracks.forEach(function (track) {\n      audioStream.addTrack(track);\n    });\n    var outputStream = new MediaStream();\n    [audioStream, videoOutputStream].forEach(function (s) {\n      s.getTracks().forEach(function (t) {\n        outputStream.addTrack(t);\n      });\n    });\n    mediaRecorderRef.current = new MediaRecorder(outputStream, {\n      mimeType: 'video/webm',\n      videoBitsPerSecond: 3000000\n    });\n    mediaRecorderRef.current.addEventListener('dataavailable', function (e) {\n      wsRef.current.send(e.data);\n      console.log(wsRef);\n    });\n    mediaRecorderRef.current.addEventListener('stop', function () {\n      stopStreaming();\n      wsRef.current.close();\n    });\n    mediaRecorderRef.current.start(1000);\n  };\n\n  useEffect(function () {\n    nameRef.current = shoutOut;\n  }, [shoutOut]);\n  useEffect(function () {\n    return function () {\n      cancelAnimationFrame(requestAnimationRef.current);\n    };\n  }, []);\n  return __jsx(\"div\", {\n    style: {\n      maxWidth: '980px',\n      margin: '0 auto'\n    }\n  }, __jsx(Head, null, __jsx(\"title\", null, \"Streamr\")), __jsx(\"h1\", null, \"Streamr\"), !cameraEnabled && __jsx(\"button\", {\n    className: \"button button-outline\",\n    onClick: enableCamera\n  }, \"Enable Camera\"), cameraEnabled && (streaming ? __jsx(\"div\", null, __jsx(\"span\", null, connected ? 'Connected' : 'Disconnected'), __jsx(\"button\", {\n    className: \"button button-outline\",\n    onClick: stopStreaming\n  }, \"Stop Streaming\")) : __jsx(React.Fragment, null, __jsx(\"input\", {\n    placeholder: \"Stream Key\",\n    type: \"text\",\n    onChange: function onChange(e) {\n      return setStreamKey(e.target.value);\n    }\n  }), __jsx(\"button\", {\n    className: \"button button-outline\",\n    disabled: !streamKey,\n    onClick: startStreaming\n  }, \"Start Streaming\"))), __jsx(\"div\", {\n    className: \"row\"\n  }, __jsx(\"div\", {\n    className: \"column\"\n  }, __jsx(\"h2\", null, \"Input\"), __jsx(\"video\", {\n    ref: videoRef,\n    controls: true,\n    width: \"100%\",\n    height: \"auto\",\n    muted: true\n  })), __jsx(\"div\", {\n    className: \"column\"\n  }, __jsx(\"h2\", null, \"Output\"), __jsx(\"canvas\", {\n    ref: canvasRef\n  }))));\n}, \"CllKCqIPabUXyN+2UvYzyGBdsdU=\");","map":{"version":3,"sources":["E:/truminds/WebBrowserToRtmp/pages/index.js"],"names":["React","useEffect","useState","useRef","Head","CAMERA_CONSTRAINTS","audio","video","width","height","connected","setConnected","cameraEnabled","setCameraEnabled","streaming","setStreaming","streamKey","setStreamKey","shoutOut","setShoutOut","inputStreamRef","videoRef","canvasRef","wsRef","mediaRecorderRef","requestAnimationRef","nameRef","enableCamera","navigator","mediaDevices","getUserMedia","current","srcObject","play","clientHeight","clientWidth","requestAnimationFrame","updateCanvas","ended","paused","ctx","getContext","drawImage","fillStyle","font","stopStreaming","stop","startStreaming","protocol","window","location","replace","WebSocket","host","console","log","url","addEventListener","open","videoOutputStream","captureStream","audioStream","MediaStream","audioTracks","getAudioTracks","forEach","track","addTrack","outputStream","s","getTracks","t","MediaRecorder","mimeType","videoBitsPerSecond","e","send","data","close","start","cancelAnimationFrame","maxWidth","margin","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport Head from 'next/head';\r\n\r\nconst CAMERA_CONSTRAINTS = {\r\n  audio: true,\r\n  video: { width: 960, height: 540 }\r\n};\r\n\r\nexport default () => {\r\n  const [connected, setConnected] = useState(false);\r\n  const [cameraEnabled, setCameraEnabled] = useState(false);\r\n  const [streaming, setStreaming] = useState(false);\r\n  const [streamKey, setStreamKey] = useState(null);\r\n  const [shoutOut, setShoutOut] = useState('you');\r\n\r\n  const inputStreamRef = useRef();\r\n  const videoRef = useRef();\r\n  const canvasRef = useRef();\r\n  const wsRef = useRef();\r\n  const mediaRecorderRef = useRef();\r\n  const requestAnimationRef = useRef();\r\n  const nameRef = useRef();\r\n\r\n  const enableCamera = async () => {\r\n    inputStreamRef.current = await navigator.mediaDevices.getUserMedia(\r\n      CAMERA_CONSTRAINTS\r\n    );\r\n\r\n    videoRef.current.srcObject = inputStreamRef.current;\r\n\r\n    await videoRef.current.play();\r\n\r\n    // We need to set the canvas height/width to match the video element.\r\n    canvasRef.current.height = videoRef.current.clientHeight;\r\n    canvasRef.current.width = videoRef.current.clientWidth;\r\n\r\n    requestAnimationRef.current = requestAnimationFrame(updateCanvas);\r\n\r\n    setCameraEnabled(true);\r\n  };\r\n\r\n  const updateCanvas = () => {\r\n    if (videoRef.current.ended || videoRef.current.paused) {\r\n      return;\r\n    }\r\n\r\n    const ctx = canvasRef.current.getContext('2d');\r\n\r\n    ctx.drawImage(\r\n      videoRef.current,\r\n      0,\r\n      0,\r\n      videoRef.current.clientWidth,\r\n      videoRef.current.clientHeight\r\n    );\r\n\r\n    ctx.fillStyle = '#ff0000';\r\n    ctx.font = '50px monospace';\r\n    // ctx.fillText(`Oh hi, ${nameRef.current}`, 5, 50);\r\n\r\n    requestAnimationRef.current = requestAnimationFrame(updateCanvas);\r\n  };\r\n\r\n  const stopStreaming = () => {\r\n    mediaRecorderRef.current.stop();\r\n    setStreaming(false);\r\n  };\r\n\r\n  const startStreaming = () => {\r\n    setStreaming(true);\r\n\r\n    const protocol = window.location.protocol.replace('http', 'ws');\r\n    wsRef.current = new WebSocket(\r\n      `${protocol}//${window.location.host}/rtmp?key=${streamKey}`\r\n    );\r\n    console.log(wsRef.current.url)\r\n\r\n    wsRef.current.addEventListener('open', function open() {\r\n      setConnected(true);\r\n    });\r\n\r\n    wsRef.current.addEventListener('close', () => {\r\n      setConnected(false);\r\n      stopStreaming();\r\n    });\r\n\r\n    const videoOutputStream = canvasRef.current.captureStream(15); // 15 FPS\r\n\r\n    // Let's do some extra work to get audio to join the party.\r\n    // https://hacks.mozilla.org/2016/04/record-almost-everything-in-the-browser-with-mediarecorder/\r\n    const audioStream = new MediaStream();\r\n    const audioTracks = inputStreamRef.current.getAudioTracks();\r\n    audioTracks.forEach(function(track) {\r\n      audioStream.addTrack(track);\r\n    });\r\n\r\n    const outputStream = new MediaStream();\r\n    [audioStream, videoOutputStream].forEach(function(s) {\r\n        s.getTracks().forEach(function(t) {\r\n            outputStream.addTrack(t);\r\n        });\r\n    });\r\n\r\n\r\n    mediaRecorderRef.current = new MediaRecorder(outputStream, {\r\n      mimeType: 'video/webm',\r\n      videoBitsPerSecond: 3000000\r\n    });\r\n\r\n    mediaRecorderRef.current.addEventListener('dataavailable', e => {\r\n      wsRef.current.send(e.data);\r\n      console.log(wsRef)\r\n    });\r\n\r\n    mediaRecorderRef.current.addEventListener('stop', () => {\r\n      stopStreaming();\r\n      wsRef.current.close();\r\n    });\r\n\r\n    mediaRecorderRef.current.start(1000);\r\n  };\r\n\r\n  useEffect(() => {\r\n    nameRef.current = shoutOut;\r\n  }, [shoutOut]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      cancelAnimationFrame(requestAnimationRef.current);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ maxWidth: '980px', margin: '0 auto' }}>\r\n      <Head>\r\n        <title>Streamr</title>\r\n      </Head>\r\n      <h1>Streamr</h1>\r\n\r\n      {!cameraEnabled && (\r\n        <button className=\"button button-outline\" onClick={enableCamera}>\r\n          Enable Camera\r\n        </button>\r\n      )}\r\n\r\n      {cameraEnabled &&\r\n        (streaming ? (\r\n          <div>\r\n            <span>{connected ? 'Connected' : 'Disconnected'}</span>\r\n            <button className=\"button button-outline\" onClick={stopStreaming}>\r\n              Stop Streaming\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <input\r\n              placeholder=\"Stream Key\"\r\n              type=\"text\"\r\n              onChange={e => setStreamKey(e.target.value)}\r\n            />\r\n            <button\r\n              className=\"button button-outline\"\r\n              disabled={!streamKey}\r\n              onClick={startStreaming}\r\n            >\r\n              Start Streaming\r\n            </button>\r\n          </>\r\n        ))}\r\n      <div className=\"row\">\r\n        <div className=\"column\">\r\n          <h2>Input</h2>\r\n          <video ref={videoRef} controls width=\"100%\" height=\"auto\" muted></video>\r\n        </div>\r\n        <div className=\"column\">\r\n          <h2>Output</h2>\r\n          <canvas ref={canvasRef}></canvas>\r\n          {/* <input\r\n            placeholder=\"Shout someone out!\"\r\n            type=\"text\"\r\n            onChange={e => setShoutOut(e.target.value)}\r\n          /> */}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}