{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useState, useRef } from 'react';\nimport Head from 'next/head';\nconst CAMERA_CONSTRAINTS = {\n  audio: true,\n  video: {\n    width: 960,\n    height: 540\n  }\n};\nexport default (() => {\n  const {\n    0: connected,\n    1: setConnected\n  } = useState(false);\n  const {\n    0: cameraEnabled,\n    1: setCameraEnabled\n  } = useState(false);\n  const {\n    0: streaming,\n    1: setStreaming\n  } = useState(false);\n  const {\n    0: streamKey,\n    1: setStreamKey\n  } = useState(null);\n  const {\n    0: shoutOut,\n    1: setShoutOut\n  } = useState('you');\n  const inputStreamRef = useRef();\n  const videoRef = useRef();\n  const canvasRef = useRef();\n  const wsRef = useRef();\n  const mediaRecorderRef = useRef();\n  const requestAnimationRef = useRef();\n  const nameRef = useRef();\n\n  const enableCamera = async () => {\n    inputStreamRef.current = await navigator.mediaDevices.getUserMedia(CAMERA_CONSTRAINTS);\n    videoRef.current.srcObject = inputStreamRef.current;\n    await videoRef.current.play(); // We need to set the canvas height/width to match the video element.\n\n    canvasRef.current.height = videoRef.current.clientHeight;\n    canvasRef.current.width = videoRef.current.clientWidth;\n    requestAnimationRef.current = requestAnimationFrame(updateCanvas);\n    setCameraEnabled(true);\n  };\n\n  const updateCanvas = () => {\n    if (videoRef.current.ended || videoRef.current.paused) {\n      return;\n    }\n\n    const ctx = canvasRef.current.getContext('2d');\n    ctx.drawImage(videoRef.current, 0, 0, videoRef.current.clientWidth, videoRef.current.clientHeight);\n    ctx.fillStyle = '#ff0000';\n    ctx.font = '50px monospace'; // ctx.fillText(`Oh hi, ${nameRef.current}`, 5, 50);\n\n    requestAnimationRef.current = requestAnimationFrame(updateCanvas);\n  };\n\n  const stopStreaming = () => {\n    mediaRecorderRef.current.stop();\n    setStreaming(false);\n  };\n\n  const startStreaming = () => {\n    setStreaming(true); // const protocol = window.location.protocol.replace('http', 'ws');\n\n    const protocol = \"wss://192.168.100.43:3443\";\n    wsRef.current = new WebSocket(`${protocol}/rtmp?key=${streamKey}`);\n    console.log(wsRef.current.url);\n    wsRef.current.addEventListener('open', function open() {\n      setConnected(true);\n    });\n    wsRef.current.addEventListener('close', () => {\n      setConnected(false);\n      stopStreaming();\n    });\n    const videoOutputStream = canvasRef.current.captureStream(15); // 15 FPS\n    // Let's do some extra work to get audio to join the party.\n    // https://hacks.mozilla.org/2016/04/record-almost-everything-in-the-browser-with-mediarecorder/\n\n    const audioStream = new MediaStream();\n    const audioTracks = inputStreamRef.current.getAudioTracks();\n    audioTracks.forEach(function (track) {\n      audioStream.addTrack(track);\n    });\n    const outputStream = new MediaStream();\n    [audioStream, videoOutputStream].forEach(function (s) {\n      s.getTracks().forEach(function (t) {\n        outputStream.addTrack(t);\n      });\n    });\n    mediaRecorderRef.current = new MediaRecorder(outputStream, {\n      mimeType: 'video/webm',\n      videoBitsPerSecond: 3000000\n    });\n    mediaRecorderRef.current.addEventListener('dataavailable', e => {\n      wsRef.current.send(e.data);\n      console.log(wsRef.current);\n    });\n    mediaRecorderRef.current.addEventListener('stop', () => {\n      console.log(\"frontend\");\n      stopStreaming();\n      wsRef.current.close();\n    });\n    mediaRecorderRef.current.start(1000);\n  };\n\n  useEffect(() => {\n    nameRef.current = shoutOut;\n  }, [shoutOut]);\n  useEffect(() => {\n    return () => {\n      cancelAnimationFrame(requestAnimationRef.current);\n    };\n  }, []);\n  return __jsx(\"div\", {\n    style: {\n      maxWidth: '980px',\n      margin: '0 auto'\n    }\n  }, __jsx(Head, null, __jsx(\"title\", null, \"Streamer\")), __jsx(\"h1\", null, \"Streaming server\"), !cameraEnabled && __jsx(\"button\", {\n    className: \"button button-outline\",\n    onClick: enableCamera\n  }, \"Enable Camera\"), cameraEnabled && (streaming ? __jsx(\"div\", null, __jsx(\"span\", null, connected ? 'Connected' : 'Disconnected'), __jsx(\"button\", {\n    className: \"button button-outline\",\n    onClick: stopStreaming\n  }, \"Stop Streaming\")) : __jsx(React.Fragment, null, __jsx(\"input\", {\n    placeholder: \"Stream Key\",\n    type: \"text\",\n    onChange: e => setStreamKey(e.target.value)\n  }), __jsx(\"button\", {\n    className: \"button button-outline\",\n    disabled: !streamKey,\n    onClick: startStreaming\n  }, \"Start Streaming\"))), __jsx(\"div\", {\n    className: \"row\"\n  }, __jsx(\"div\", {\n    className: \"column\"\n  }, __jsx(\"h2\", null, \"Input\"), __jsx(\"video\", {\n    ref: videoRef,\n    controls: true,\n    width: \"100%\",\n    height: \"auto\",\n    muted: true\n  })), __jsx(\"div\", {\n    className: \"column\"\n  }, __jsx(\"h2\", null, \"Output\"), __jsx(\"canvas\", {\n    ref: canvasRef\n  }))));\n});","map":{"version":3,"sources":["E:/truminds/Unified/frontend/pages/index.js"],"names":["React","useEffect","useState","useRef","Head","CAMERA_CONSTRAINTS","audio","video","width","height","connected","setConnected","cameraEnabled","setCameraEnabled","streaming","setStreaming","streamKey","setStreamKey","shoutOut","setShoutOut","inputStreamRef","videoRef","canvasRef","wsRef","mediaRecorderRef","requestAnimationRef","nameRef","enableCamera","current","navigator","mediaDevices","getUserMedia","srcObject","play","clientHeight","clientWidth","requestAnimationFrame","updateCanvas","ended","paused","ctx","getContext","drawImage","fillStyle","font","stopStreaming","stop","startStreaming","protocol","WebSocket","console","log","url","addEventListener","open","videoOutputStream","captureStream","audioStream","MediaStream","audioTracks","getAudioTracks","forEach","track","addTrack","outputStream","s","getTracks","t","MediaRecorder","mimeType","videoBitsPerSecond","e","send","data","close","start","cancelAnimationFrame","maxWidth","margin","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport Head from 'next/head';\r\n\r\nconst CAMERA_CONSTRAINTS = {\r\n  audio: true,\r\n  video: { width: 960, height: 540 }\r\n};\r\n\r\nexport default () => {\r\n  const [connected, setConnected] = useState(false);\r\n  const [cameraEnabled, setCameraEnabled] = useState(false);\r\n  const [streaming, setStreaming] = useState(false);\r\n  const [streamKey, setStreamKey] = useState(null);\r\n  const [shoutOut, setShoutOut] = useState('you');\r\n\r\n  const inputStreamRef = useRef();\r\n  const videoRef = useRef();\r\n  const canvasRef = useRef();\r\n  const wsRef = useRef();\r\n  const mediaRecorderRef = useRef();\r\n  const requestAnimationRef = useRef();\r\n  const nameRef = useRef();\r\n\r\n  const enableCamera = async () => {\r\n    inputStreamRef.current = await navigator.mediaDevices.getUserMedia(\r\n      CAMERA_CONSTRAINTS\r\n    );\r\n\r\n    videoRef.current.srcObject = inputStreamRef.current;\r\n\r\n    await videoRef.current.play();\r\n\r\n    // We need to set the canvas height/width to match the video element.\r\n    canvasRef.current.height = videoRef.current.clientHeight;\r\n    canvasRef.current.width = videoRef.current.clientWidth;\r\n\r\n    requestAnimationRef.current = requestAnimationFrame(updateCanvas);\r\n\r\n    setCameraEnabled(true);\r\n  };\r\n\r\n  const updateCanvas = () => {\r\n    if (videoRef.current.ended || videoRef.current.paused) {\r\n      return;\r\n    }\r\n\r\n    const ctx = canvasRef.current.getContext('2d');\r\n\r\n    ctx.drawImage(\r\n      videoRef.current,\r\n      0,\r\n      0,\r\n      videoRef.current.clientWidth,\r\n      videoRef.current.clientHeight\r\n    );\r\n\r\n    ctx.fillStyle = '#ff0000';\r\n    ctx.font = '50px monospace';\r\n    // ctx.fillText(`Oh hi, ${nameRef.current}`, 5, 50);\r\n\r\n    requestAnimationRef.current = requestAnimationFrame(updateCanvas);\r\n  };\r\n\r\n  const stopStreaming = () => {\r\n    mediaRecorderRef.current.stop();\r\n    setStreaming(false);\r\n  };\r\n\r\n  const startStreaming = () => {\r\n    setStreaming(true);\r\n\r\n    // const protocol = window.location.protocol.replace('http', 'ws');\r\n    const protocol = \"wss://192.168.100.43:3443\";\r\n    wsRef.current = new WebSocket(\r\n      `${protocol}/rtmp?key=${streamKey}`\r\n    );\r\n    console.log(wsRef.current.url)\r\n\r\n    wsRef.current.addEventListener('open', function open() {\r\n      setConnected(true);\r\n    });\r\n\r\n    wsRef.current.addEventListener('close', () => {\r\n      setConnected(false);\r\n      stopStreaming();\r\n    });\r\n\r\n    const videoOutputStream = canvasRef.current.captureStream(15); // 15 FPS\r\n\r\n    // Let's do some extra work to get audio to join the party.\r\n    // https://hacks.mozilla.org/2016/04/record-almost-everything-in-the-browser-with-mediarecorder/\r\n    const audioStream = new MediaStream();\r\n    const audioTracks = inputStreamRef.current.getAudioTracks();\r\n    audioTracks.forEach(function(track) {\r\n      audioStream.addTrack(track);\r\n    });\r\n\r\n    const outputStream = new MediaStream();\r\n    [audioStream, videoOutputStream].forEach(function(s) {\r\n        s.getTracks().forEach(function(t) {\r\n            outputStream.addTrack(t);\r\n        });\r\n    });\r\n\r\n\r\n    mediaRecorderRef.current = new MediaRecorder(outputStream, {\r\n      mimeType: 'video/webm',\r\n      videoBitsPerSecond: 3000000\r\n    });\r\n\r\n    mediaRecorderRef.current.addEventListener('dataavailable', e => {\r\n      wsRef.current.send(e.data);\r\n      console.log(wsRef.current)\r\n    });\r\n\r\n    mediaRecorderRef.current.addEventListener('stop', () => {\r\n      console.log(\"frontend\")\r\n      stopStreaming();\r\n      wsRef.current.close();\r\n    });\r\n\r\n    mediaRecorderRef.current.start(1000);\r\n  };\r\n\r\n  useEffect(() => {\r\n    nameRef.current = shoutOut;\r\n  }, [shoutOut]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      cancelAnimationFrame(requestAnimationRef.current);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ maxWidth: '980px', margin: '0 auto' }}>\r\n      <Head>\r\n        <title>Streamer</title>\r\n      </Head>\r\n      <h1>Streaming server</h1>\r\n\r\n      {!cameraEnabled && (\r\n        <button className=\"button button-outline\" onClick={enableCamera}>\r\n          Enable Camera\r\n        </button>\r\n      )}\r\n\r\n      {cameraEnabled &&\r\n        (streaming ? (\r\n          <div>\r\n            <span>{connected ? 'Connected' : 'Disconnected'}</span>\r\n            <button className=\"button button-outline\" onClick={stopStreaming}>\r\n              Stop Streaming\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <input\r\n              placeholder=\"Stream Key\"\r\n              type=\"text\"\r\n              onChange={e => setStreamKey(e.target.value)}\r\n            />\r\n            <button\r\n              className=\"button button-outline\"\r\n              disabled={!streamKey}\r\n              onClick={startStreaming}\r\n            >\r\n              Start Streaming\r\n            </button>\r\n          </>\r\n        ))}\r\n      <div className=\"row\">\r\n        <div className=\"column\">\r\n          <h2>Input</h2>\r\n          <video ref={videoRef} controls width=\"100%\" height=\"auto\" muted></video>\r\n        </div>\r\n        <div className=\"column\">\r\n          <h2>Output</h2>\r\n          <canvas ref={canvasRef}></canvas>\r\n          {/* <input\r\n            placeholder=\"Shout someone out!\"\r\n            type=\"text\"\r\n            onChange={e => setShoutOut(e.target.value)}\r\n          /> */}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}